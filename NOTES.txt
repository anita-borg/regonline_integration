My API key is:
9mIRFe399oIBM0fnX5jxLtupSZlaizGgtHUEuDpUi34QWs66G6LxFDZ6wsdpgzCw

API docs at:
http://developer.regonline.com/

==


Log in from 52 server:

psql -h abicivis.c8krcuxhwj4g.us-west-2.redshift.amazonaws.com dev mhayward

ABIcivisghc2015




==

import datetime
import json
from optparse import OptionParser
import time

from suds.client import Client
from suds.xsd.doctor import ImportDoctor, Import
from suds.plugin import MessagePlugin
from datastore import get_sponsors, get_registrants, set_sponsors, set_registrants, get_discount_codes, set_discount_codes
from sfexport import sync_salesforce

def get_password( password_file ):
    '''Utility function to load in our various passwords.'''
    password = None
    with open( password_file, "r" ) as f:
        for key in f.readlines():
            key = key.strip()
            if key.startswith( '#' ):
                continue
            elif len( key ) == 0:
                continue
            else:
                password = key
                break
    return password

regonline_password_file = './config/regonline_api_key.txt'
regonline_api_key = get_password( regonline_password_file )
regonline_wsdl = "https://www.regonline.com/api/default.asmx?WSDL"
regonline_soap_namespace = 'http://www.regonline.com/api'
eventID =  1702108
imp = Import( 'http://schemas.xmlsoap.org/soap/encoding/' )
imp.filter.add( regonline_soap_namespace )
doctor = ImportDoctor( imp )
client = Client( regonline_wsdl, doctor=doctor )
token = client.factory.create( "TokenHeader" )
token.APIToken = regonline_api_key
client.set_options( soapheaders=token )
attendees = get_registrants( eventID )
attendee_ids = { x['ID']:x for x in attendees }
result = client.service.GetRegistrationsForEvent( eventID=eventID, filter=None, orderBy=None )
new_attendees = result[1][0]
new_attendee_ids = { x['ID']:x for x in new_attendees }
db_only = [ x for x in attendees if x['ID'] not in new_attendee_ids ]


==


x = client.service.GetCustomFieldResponsesForRegistration( eventID=eventID, registrationID=attendee['ID'], pageSectionID=1 )

Badge type ==> Registrant_Type__c (object: OpportunityLineItems)
Percent off ==> Percent_off__c (object: OpportunityLineItems)
Final Quantity ==> Redeemable_Quantity__c (object: OpportunityLineItems) ==> Parsed to integer dataType

==

0. Update registration report to include breakout for registration
type by registered no code, non-reserved code, reserved code, and
reserved code outstanding.

I DELETED ALL DISCOUNT CODES AND REPOPULATED, LEAVING SPONSORS AND
ATTENDEES IN PLACE.

==

No booth:
Stanford University, Department of Computer Science
University of California - San Diego, Department Computer Science and Engineering
Pennsylvania State University, Department of Computer Science and Engineering
OpenText

Univerity of Illinois: two spaces after the word "of" in the name.


==


Mobile app tasks:

1. Get attendee groups encodeed.


==

for thing in jd:
    for eps in thing.get( 'externalProfiles', [] ):
    	if type( eps ) == list:
            for ep in eps:
                print type( ep ), ep, eps
                if ep.get( 'externalProfileType', '' ) == 'LinkedIn':
                    td.append( ( thing['emails'], ep ) )
        else:
            if eps.get( 'externalProfileType', '' ) == 'LinkedIn':
                td.append( ( thing['emails'], eps ) )

/wintmp/abi/speaker_images/input/pan130s2-auth2_pic_0.jpg
==

Workflow for image fixing:

1. Manually download speakers list.

2. Manually download images zip.

3. Run a script to finess the images in the zip to the desired size and format, and copy them up to the server.

560x620 png

Conversion mechanism - center their existing image.

4. The server serves them.

Image server:

Very simple web server, serves up images at:

base/secret/key_from_linklings.png


==

52.8.24.90

matt@52.8.24.90:/home/matt/regonline_integration/config/

==

Agenda: Fall Partner Meeting
Agenda: Global Women Technical Leaders Program
Agenda: Private Reception
Agenda: Senior Women's Program and Luncheon
Agenda: Technical Executive Forum
Ethnicity: African or African-American/Black
Ethnicity: Alaska Native or American Indian/Native American
Ethnicity: Asian or Asian-American
Ethnicity: European or Euro-American/White
Ethnicity: Native Hawaiian or Pacific Islander
Ethnicity: Hispanic or Latina/o
Ethnicity: Other
Interest: ABI.Locals
Interest: ACM
Interest: Artificial Intelligence
Interest: Being a Mentor
Interest: Being Mentored
Interest: CRA-W
Interest: Data Science
Interest: Entrepreneurship
Interest: Graphic Effects / Gaming
Interest: Human-Computer Interactions
Interest: IEEE
Interest: Internet of Things
Interest: ISOC
Interest: Lean-In Circles
Interest: NCWIT
Interest: Open Source
Interest: Organizational Change
Interest: Privacy
Interest: Productization
Interest: Security
Interest: Systers
Interest: Wearables

==x

First Name (required)	
Last Name (required)	
Title	
Company	
Description	
Image URL	
Website	
Twitter Handle	
Facebook URL	
LinkedIn URL	
Session IDs	
Attendee ID	
Speaker ID
